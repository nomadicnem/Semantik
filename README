Semantik 1.0.9, Thomas Nagy tnagy at waf.io
Project page:  https://waf.io/semantik.html
Source code:   https://gitlab.com/ita1024/semantik
-----------------------------------------------

1. Compilation and installation:

The main dependencies are Qt Webengine, KDE 5 and Python 3.
Here are dependency examples for typical setups:

Ubuntu 17.10: apt install libkf5kdelibs4support-dev libqt5svg5-dev qtwebengine5-dev
        qtpositioning5-dev python3-dev kio-dev python3-pygments
Gentoo: emerge --ask kde-frameworks/kdelibs4support dev-qt/qtwebengine pygments
Suse: zypper install python3-devel kio-devel kiconthemes-devel ki18n-devel kdelibs4support-devel
        libqt5-qtwebengine-devel python3-Pygments
Fedora 27: dnf install python3-devel kf5-kio-devel kf5-kdelibs4support-devel kf5-ki18n-devel kf5-kiconthemes-devel
        gcc-c++ qt5-linguist qt5-qtsvg-devel qt5-qtwebengine-devel python3-pygments
FreeBSD 12: pkg install qt5-svg python36 qt5-webengine kf5-kio kf5-kdelibs4support kf5-ki18n kf5-kiconthemes py36-pygments

To build the project, run:
  ./waf configure build

A few systems may require different options such as:
  PYTHON=python3 PYTHON_VERSION=3.5 waf configure build

Semantik will only work if installed, so make sure to install
after the configuration and builds are successful:
  ./waf install

Sometimes additional installation options may be necessary:
  ./waf install --nomimes --noldconfig --nogtkicons

The generic command for creating a package is the following (packagers):
  ./waf configure clean build --prefix=/usr && DESTDIR=$fakeroot ./waf install

-----------------------------------------------

2. Getting started:

Consult the tips in the help menu!

-----------------------------------------------

3. Document generators and pictures:

* For security reasons, only use documents that you have created yourself
* Document generation is performed in two steps: variable substitution and preprocessing
  - Variables in the form @var_name@ are replaced by the corresponding document variables
    The core of the document is a variable itself
  - A c-like preprocessor is then run on the resulting document, using (nested) conditionals such as:
    #if 0, #if !0, #ifdef var, #endif (the #elif construct is not supported yet)
* External viewers can be used, from the 'variables' panel, add code in the form:
  'command_'+template_name=command_line, for example:
     command_html=kfmclient newTab %s
     command_odt=oowriter %s
     command_s5=firefox %s
  this is only necessary for documents that do not have a KDE mapping for opening them
* LaTeX commands can be inserted by using all_latex=1

Maps picture can be exported from the command-line (png or pdf):
  semantik foo.sem -o foo.pdf
Diagrams can be exported in a similar fashion:
  semantik-d diag.semd -o foo.pdf

-----------------------------------------------

4. License:

GPL V3

-----------------------------------------------

5. Quirks:

If screen artifacts are observed when dragging and selecting elements,
try changing the QtCurve Qt widget style to Breeze for example (Ubuntu 17.10).

Documents created under specific font DPI settings in KDE may render
improperly under other font DPI settings.

Exported SVG document may render improperly if the fonts are not installed
on the system; newer Semantik documents set "Monospace" as default
font for this reason.

-----------------------------------------------

